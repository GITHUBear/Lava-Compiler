lex:
(KEYWORD):[int]
(SEPERATOR):[[]
(INUM):[10]
(SEPERATOR):[]]
(ID):[res]
(SEPERATOR):[;]
(KEYWORD):[int]
(ID):[getOdd]
(SEPERATOR):[(]
(KEYWORD):[int]
(ID):[x]
(SEPERATOR):[)]
(SEPERATOR):[{]
(KEYWORD):[return]
(INUM):[2]
(OPERATOR):[ARITH_OP, 34]
(ID):[x]
(OPERATOR):[ARITH_OP, 37]
(INUM):[1]
(SEPERATOR):[;]
(SEPERATOR):[}]
(KEYWORD):[int]
(ID):[main]
(SEPERATOR):[(]
(SEPERATOR):[)]
(SEPERATOR):[{]
(KEYWORD):[int]
(ID):[i]
(SEPERATOR):[;]
(KEYWORD):[for]
(SEPERATOR):[(]
(ID):[i]
(OPERATOR):[ASSIGN_OP, 57]
(INUM):[0]
(SEPERATOR):[;]
(ID):[i]
(OPERATOR):[ARITH_OP, 34]
(INUM):[2]
(OPERATOR):[RELAT_OP, 44]
(INUM):[9]
(SEPERATOR):[;]
(ID):[i]
(OPERATOR):[UNARY_OP, 30]
(SEPERATOR):[)]
(ID):[res]
(SEPERATOR):[[]
(ID):[i]
(OPERATOR):[ARITH_OP, 34]
(INUM):[2]
(SEPERATOR):[]]
(OPERATOR):[ASSIGN_OP, 57]
(ID):[getOdd]
(SEPERATOR):[(]
(ID):[i]
(SEPERATOR):[)]
(SEPERATOR):[;]
(KEYWORD):[return]
(INUM):[0]
(SEPERATOR):[;]
(SEPERATOR):[}]


syntax:
program:
    deflist:
        tp:
            'int':
            INTEGER:  [10]
        def:
            vallist:
                ID:  [res]
        deflist:
            tp:
                'int':
            def:
                fundef:
                    ID:  [getOdd]
                    args:
                        param:
                            tp:
                                'int':
                            ID:  [x]
                compstmt:
                    innerdeflist:
                    stmtlist:
                        stmt:
                            'return':
                            exp:
                                exp:
                                    exp:
                                        INTEGER:  [2]
                                    OPERATER:  (ARITH_OP, *)
                                    exp:
                                        ID:  [x]
                                OPERATER:  (ARITH_OP, +)
                                exp:
                                    INTEGER:  [1]
                        stmtlist:
            deflist:
                tp:
                    'int':
                def:
                    fundef:
                        ID:  [main]
                    compstmt:
                        innerdeflist:
                            innerdef:
                                tp:
                                    'int':
                                innerdeclist:
                                    innerdec:
                                        ID:  [i]
                            innerdeflist:
                        stmtlist:
                            stmt:
                                'for':
                                initlist:
                                    init:
                                        ID:  [i]
                                        OPERATER:  (ASSIGN_OP, =)
                                        exp:
                                            INTEGER:  [0]
                                exp:
                                    exp:
                                        exp:
                                            ID:  [i]
                                        OPERATER:  (ARITH_OP, *)
                                        exp:
                                            INTEGER:  [2]
                                    OPERATER:  (RELAT_OP, <=)
                                    exp:
                                        INTEGER:  [9]
                                steplist:
                                    step:
                                        ID:  [i]
                                        OPERATER:  (UNARY_OP, ++)
                                stmt:
                                    exp:
                                        exp:
                                            ID:  [res]
                                            exp:
                                                exp:
                                                    ID:  [i]
                                                OPERATER:  (ARITH_OP, *)
                                                exp:
                                                    INTEGER:  [2]
                                        OPERATER:  (ASSIGN_OP, =)
                                        exp:
                                            ID:  [getOdd]
                                            exp:
                                                ID:  [i]
                            stmtlist:
                                stmt:
                                    'return':
                                    exp:
                                        INTEGER:  [0]
                                stmtlist:
                deflist:


semantic:
table:
   name    type   level    offset  funarg   oname
    res int_array       0     -48        

table:
   name    type   level    offset  funarg   oname
    res int_array       0     -48        
 getOdd    func       0           int()

table:
   name    type   level    offset  funarg   oname
    res int_array       0     -48        
 getOdd    func       0           int()
      x     int       1       0        

table:
   name    type   level    offset  funarg   oname
    res int_array       0     -48        
 getOdd    func       0           int(int, )
      x     int       1       0        

table:
   name    type   level    offset  funarg   oname
    res int_array       0     -48        
 getOdd    func       0           int(int, )
      x     int       1       0        
  $tmp1     int       1     -12        

after pop
table:
   name    type   level    offset  funarg   oname
    res int_array       0     -48        
 getOdd    func       0           int(int, )
      x     int       1       0        

table:
   name    type   level    offset  funarg   oname
    res int_array       0     -48        
 getOdd    func       0           int(int, )
      x     int       1       0        
  $tmp2     int       1     -12        

table:
   name    type   level    offset  funarg   oname
    res int_array       0     -48        
 getOdd    func       0           int(int, )
      x     int       1       0        
  $tmp2     int       1     -12        
  $tmp3     int       1     -16        

after pop
table:
   name    type   level    offset  funarg   oname
    res int_array       0     -48        
 getOdd    func       0           int(int, )
      x     int       1       0        
  $tmp2     int       1     -12        

after pop
table:
   name    type   level    offset  funarg   oname
    res int_array       0     -48        
 getOdd    func       0           int(int, )
      x     int       1       0        

table:
   name    type   level    offset  funarg   oname
    res int_array       0     -48        
 getOdd    func       0           int(int, )
      x     int       1       0        
  $tmp4     int       1     -12        

table:
   name    type   level    offset  funarg   oname
    res int_array       0     -48        
 getOdd    func       0           int(int, )

table:
   name    type   level    offset  funarg   oname
    res int_array       0     -48        
 getOdd    func       0           int(int, )
   main    func       0           int()

table:
   name    type   level    offset  funarg   oname
    res int_array       0     -48        
 getOdd    func       0           int(int, )
   main    func       0           int()
      i     int       1     -12        

table:
   name    type   level    offset  funarg   oname
    res int_array       0     -48        
 getOdd    func       0           int(int, )
   main    func       0           int()
      i     int       1     -12        
  $tmp5     int       1     -16        

table:
   name    type   level    offset  funarg   oname
    res int_array       0     -48        
 getOdd    func       0           int(int, )
   main    func       0           int()
      i     int       1     -12        
  $tmp5     int       1     -16        
  $tmp6     int       1     -20        

after pop
table:
   name    type   level    offset  funarg   oname
    res int_array       0     -48        
 getOdd    func       0           int(int, )
   main    func       0           int()
      i     int       1     -12        
  $tmp5     int       1     -16        

table:
   name    type   level    offset  funarg   oname
    res int_array       0     -48        
 getOdd    func       0           int(int, )
   main    func       0           int()
      i     int       1     -12        
  $tmp5     int       1     -16        
  $tmp7     int       1     -20        

table:
   name    type   level    offset  funarg   oname
    res int_array       0     -48        
 getOdd    func       0           int(int, )
   main    func       0           int()
      i     int       1     -12        
  $tmp5     int       1     -16        
  $tmp7     int       1     -20        
  $tmp8     int       1     -24        

table:
   name    type   level    offset  funarg   oname
    res int_array       0     -48        
 getOdd    func       0           int(int, )
   main    func       0           int()
      i     int       1     -12        
  $tmp5     int       1     -16        
  $tmp7     int       1     -20        
  $tmp8     int       1     -24        
  $tmp9     int       1     -28        

after pop
table:
   name    type   level    offset  funarg   oname
    res int_array       0     -48        
 getOdd    func       0           int(int, )
   main    func       0           int()
      i     int       1     -12        
  $tmp5     int       1     -16        
  $tmp7     int       1     -20        
  $tmp8     int       1     -24        

table:
   name    type   level    offset  funarg   oname
    res int_array       0     -48        
 getOdd    func       0           int(int, )
   main    func       0           int()
      i     int       1     -12        
  $tmp5     int       1     -16        
  $tmp7     int       1     -20        
  $tmp8     int       1     -24        
 $tmp10     int       1     -28        

table:
   name    type   level    offset  funarg   oname
    res int_array       0     -48        
 getOdd    func       0           int(int, )
   main    func       0           int()
      i     int       1     -12        
  $tmp5     int       1     -16        
  $tmp7     int       1     -20        
  $tmp8     int       1     -24        
 $tmp10     int       1     -28        
 $tmp11     int       1     -32        

table:
   name    type   level    offset  funarg   oname
    res int_array       0     -48        
 getOdd    func       0           int(int, )
   main    func       0           int()
      i     int       1     -12        
  $tmp5     int       1     -16        
  $tmp7     int       1     -20        
  $tmp8     int       1     -24        
 $tmp10     int       1     -28        
 $tmp11     int       1     -32        
 $tmp12     int       1     -36        

after pop
table:
   name    type   level    offset  funarg   oname
    res int_array       0     -48        
 getOdd    func       0           int(int, )
   main    func       0           int()
      i     int       1     -12        
  $tmp5     int       1     -16        
  $tmp7     int       1     -20        
  $tmp8     int       1     -24        
 $tmp10     int       1     -28        
 $tmp11     int       1     -32        

table:
   name    type   level    offset  funarg   oname
    res int_array       0     -48        
 getOdd    func       0           int(int, )
   main    func       0           int()
      i     int       1     -12        
  $tmp5     int       1     -16        
  $tmp7     int       1     -20        
  $tmp8     int       1     -24        
 $tmp10     int       1     -28        
 $tmp11     int       1     -32        
 $tmp13     int       1     -36        

table:
   name    type   level    offset  funarg   oname
    res int_array       0     -48        
 getOdd    func       0           int(int, )
   main    func       0           int()

table:
   name    type   level    offset  funarg   oname


semantic analyse passed


code:
.text
j main

.data
res: .space 40

.text
getOdd:
addiu $sp, $sp, -16
sw $ra, 12($sp)
sw $fp, 8($sp)
addiu $fp, $sp, 16
addiu $t0, $0, 2
sw $t0, -12($fp)
lw $t0, -12($fp)
lw $t1, 0($fp)
mul $t0, $t0, $t1
sw $t0, -12($fp)
addiu $t0, $0, 1
sw $t0, -16($fp)
lw $t0, -12($fp)
lw $t1, -16($fp)
add $t0, $t0, $t1
sw $t0, -12($fp)
lw $v1, -12($fp)
j label1
label3:
label1:
lw $fp, 8($sp)
lw $ra, 12($sp)
addiu $sp, $sp, 16
jr $ra

.text
main:
addiu $sp, $sp, -36
sw $ra, 32($sp)
sw $fp, 28($sp)
addiu $fp, $sp, 36
addiu $t0, $0, 0
sw $t0, -16($fp)
lw $t0, -16($fp)
sw $t0, -12($fp)
label8:
addiu $t0, $0, 2
sw $t0, -20($fp)
lw $t0, -12($fp)
lw $t1, -20($fp)
mul $t0, $t0, $t1
sw $t0, -20($fp)
addiu $t0, $0, 9
sw $t0, -24($fp)
lw $t0, -20($fp)
lw $t1, -24($fp)
ble $t0, $t1, label7
j label6
label7:
addiu $t0, $0, 2
sw $t0, -28($fp)
lw $t0, -12($fp)
lw $t1, -28($fp)
mul $t0, $t0, $t1
sw $t0, -28($fp)
la $t0, res
lw $t1, -28($fp)
sll $t1, $t1, 2
add $t0, $t0, $t1
sw $t0, -32($fp)
sw $t2, -4($sp)
sw $t1, -8($sp)
sw $t0, -12($sp)
lw $t0, -12($fp)
sw $t0, -16($sp)
addiu $sp, $sp, -16
jal getOdd
sw $v1, -36($fp)
addiu $sp, $sp, 16
lw $t0, -12($sp)
lw $t1, -8($sp)
lw $t2, -4($sp)
lw $t0, -36($fp)
lw $t1, -32($fp)
sw $t0, 0($t1)
lw $t0, -12($fp)
addiu $t0, $t0, 1
sw $t0, -12($fp)
j label8
label6:
addiu $t0, $0, 0
sw $t0, -36($fp)
lw $v1, -36($fp)
j label4
label9:
label4:
lw $fp, 28($sp)
lw $ra, 32($sp)
addiu $sp, $sp, 36
jr $ra
