lex:
(KEYWORD):[int]
(ID):[a]
(SEPERATOR):[;]
(KEYWORD):[int]
(ID):[main]
(SEPERATOR):[(]
(SEPERATOR):[)]
(SEPERATOR):[{]
(ID):[a]
(OPERATOR):[ASSIGN_OP, 57]
(INUM):[1]
(OPERATOR):[ARITH_OP, 37]
(INUM):[1]
(SEPERATOR):[;]
(KEYWORD):[return]
(INUM):[0]
(SEPERATOR):[;]
(SEPERATOR):[}]


syntax:
program:
    deflist:
        tp:
            'int':
        def:
            vallist:
                ID:  [a]
        deflist:
            tp:
                'int':
            def:
                fundef:
                    ID:  [main]
                compstmt:
                    innerdeflist:
                    stmtlist:
                        stmt:
                            exp:
                                exp:
                                    ID:  [a]
                                OPERATER:  (ASSIGN_OP, =)
                                exp:
                                    exp:
                                        INTEGER:  [1]
                                    OPERATER:  (ARITH_OP, +)
                                    exp:
                                        INTEGER:  [1]
                        stmtlist:
                            stmt:
                                'return':
                                exp:
                                    INTEGER:  [0]
                            stmtlist:
            deflist:


semantic:
table:
   name    type   level    offset  funarg   oname
      a     int       0     -12        

table:
   name    type   level    offset  funarg   oname
      a     int       0     -12        
   main    func       0           int()

table:
   name    type   level    offset  funarg   oname
      a     int       0     -12        
   main    func       0           int()
  $tmp1     int       1     -12        

table:
   name    type   level    offset  funarg   oname
      a     int       0     -12        
   main    func       0           int()
  $tmp1     int       1     -12        
  $tmp2     int       1     -16        

table:
   name    type   level    offset  funarg   oname
      a     int       0     -12        
   main    func       0           int()
  $tmp1     int       1     -12        
  $tmp2     int       1     -16        
  $tmp3     int       1     -20        

after pop
table:
   name    type   level    offset  funarg   oname
      a     int       0     -12        
   main    func       0           int()
  $tmp1     int       1     -12        
  $tmp2     int       1     -16        

after pop
table:
   name    type   level    offset  funarg   oname
      a     int       0     -12        
   main    func       0           int()
  $tmp1     int       1     -12        

table:
   name    type   level    offset  funarg   oname
      a     int       0     -12        
   main    func       0           int()
  $tmp1     int       1     -12        
  $tmp4     int       1     -16        

after pop
table:
   name    type   level    offset  funarg   oname
      a     int       0     -12        
   main    func       0           int()
  $tmp1     int       1     -12        

table:
   name    type   level    offset  funarg   oname
      a     int       0     -12        
   main    func       0           int()
  $tmp1     int       1     -12        
  $tmp5     int       1     -16        

table:
   name    type   level    offset  funarg   oname
      a     int       0     -12        
   main    func       0           int()

table:
   name    type   level    offset  funarg   oname


semantic analyse passed


code:
.data
a: .word 0

.text
main:
addiu $sp, $sp, -20
sw $ra, 16($sp)
sw $fp, 12($sp)
addiu $fp, $sp, -20
label2:
addiu $t0, $0, 0
sw $t0, -16($fp)
lw $v1, -16($fp)
label3:
lw $fp, 12($sp)
lw $ra, 16($sp)
addiu $sp, $sp, 20
jr $ra
