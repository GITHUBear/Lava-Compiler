lex:
(KEYWORD):[int]
(ID):[main]
(SEPERATOR):[(]
(SEPERATOR):[)]
(SEPERATOR):[{]
(KEYWORD):[int]
(ID):[a]
(OPERATOR):[ASSIGN_OP, 57]
(INUM):[1]
(SEPERATOR):[;]
(SEPERATOR):[{]
(KEYWORD):[int]
(ID):[a]
(OPERATOR):[ASSIGN_OP, 57]
(INUM):[2]
(SEPERATOR):[;]
(SEPERATOR):[}]
(KEYWORD):[while]
(SEPERATOR):[(]
(ID):[a]
(OPERATOR):[RELAT_OP, 43]
(INUM):[10]
(SEPERATOR):[)]
(SEPERATOR):[{]
(ID):[a]
(OPERATOR):[ASSIGN_OP, 57]
(ID):[a]
(OPERATOR):[ARITH_OP, 37]
(INUM):[10]
(SEPERATOR):[;]
(SEPERATOR):[}]
(KEYWORD):[return]
(INUM):[0]
(SEPERATOR):[;]
(SEPERATOR):[}]


syntax:
program:
    deflist:
        tp:
            'int':
        def:
            fundef:
                ID:  [main]
            compstmt:
                innerdeflist:
                    innerdef:
                        tp:
                            'int':
                        innerdeclist:
                            innerdec:
                                ID:  [a]
                                OPERATER:  (ASSIGN_OP, =)
                                exp:
                                    INTEGER:  [1]
                    innerdeflist:
                stmtlist:
                    stmt:
                        compstmt:
                            innerdeflist:
                                innerdef:
                                    tp:
                                        'int':
                                    innerdeclist:
                                        innerdec:
                                            ID:  [a]
                                            OPERATER:  (ASSIGN_OP, =)
                                            exp:
                                                INTEGER:  [2]
                                innerdeflist:
                            stmtlist:
                    stmtlist:
                        stmt:
                            'while':
                            exp:
                                exp:
                                    ID:  [a]
                                OPERATER:  (RELAT_OP, <)
                                exp:
                                    INTEGER:  [10]
                            stmt:
                                compstmt:
                                    innerdeflist:
                                    stmtlist:
                                        stmt:
                                            exp:
                                                exp:
                                                    ID:  [a]
                                                OPERATER:  (ASSIGN_OP, =)
                                                exp:
                                                    exp:
                                                        ID:  [a]
                                                    OPERATER:  (ARITH_OP, +)
                                                    exp:
                                                        INTEGER:  [10]
                                        stmtlist:
                        stmtlist:
                            stmt:
                                'return':
                                exp:
                                    INTEGER:  [0]
                            stmtlist:
        deflist:


semantic:
table:
   name    type   level    offset  funarg   oname
   main    func       0           int()

table:
   name    type   level    offset  funarg   oname
   main    func       0           int()
      a     int       1     -12        

table:
   name    type   level    offset  funarg   oname
   main    func       0           int()
      a     int       1     -12        
  $tmp1     int       1     -16        

after pop
table:
   name    type   level    offset  funarg   oname
   main    func       0           int()
      a     int       1     -12        

table:
   name    type   level    offset  funarg   oname
   main    func       0           int()
      a     int       1     -12        
      a     int       2     -16          $tmp2

table:
   name    type   level    offset  funarg   oname
   main    func       0           int()
      a     int       1     -12        
      a     int       2     -16          $tmp2
  $tmp3     int       2     -20        

after pop
table:
   name    type   level    offset  funarg   oname
   main    func       0           int()
      a     int       1     -12        
      a     int       2     -16          $tmp2

table:
   name    type   level    offset  funarg   oname
   main    func       0           int()
      a     int       1     -12        

table:
   name    type   level    offset  funarg   oname
   main    func       0           int()
      a     int       1     -12        
  $tmp4     int       1     -16        

table:
   name    type   level    offset  funarg   oname
   main    func       0           int()
      a     int       1     -12        
  $tmp4     int       1     -16        
  $tmp5     int       2     -20        

after pop
table:
   name    type   level    offset  funarg   oname
   main    func       0           int()
      a     int       1     -12        
  $tmp4     int       1     -16        

table:
   name    type   level    offset  funarg   oname
   main    func       0           int()
      a     int       1     -12        
  $tmp4     int       1     -16        
  $tmp6     int       2     -20        

after pop
table:
   name    type   level    offset  funarg   oname
   main    func       0           int()
      a     int       1     -12        
  $tmp4     int       1     -16        

table:
   name    type   level    offset  funarg   oname
   main    func       0           int()
      a     int       1     -12        
  $tmp4     int       1     -16        

table:
   name    type   level    offset  funarg   oname
   main    func       0           int()
      a     int       1     -12        
  $tmp4     int       1     -16        
  $tmp7     int       1     -20        

table:
   name    type   level    offset  funarg   oname
   main    func       0           int()

table:
   name    type   level    offset  funarg   oname


semantic analyse passed
